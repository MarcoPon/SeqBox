SeqBox - Sequenced Box container (SEQBOX/SBX)
===========================================

Encode a file in a container that can be reconstructed even after total loss of file system structures.
Use a blocksize equal or submultiple of a sector/cluster size, with a minimal header that include block
sequence number, checksum and other info. 
Additional, non critical info are contained in block 0 (like name, file size, other attributes, etc.).

Recovery can be performed simply scanning a disk / image, reading sector/cluster sized slices and checking
block signature and then CRC to detect SeqBox blocks. Then blocks can be sorted by UID's and sequence numbers.

Optionally blocks can be freely duplicated and/or stored in different media to enhance recoverability.
Eventually even a simil-RAID system could be implemented between blocks.

The UID can be anything, as long as is unique for the specific application. 
It could be random generated, or a hash of the file content, or a simple sequence, etc.

Overhead is minimal: from 16B/512B (+1 512B block) to 16B/32KB (+1 32KB block)

Could become part of a File System.


Command line tools to:
- encode file to SBX
- decode SBX to file
- utility to get info and scramble / sort / test / damage SBX file
- recovery/scan tool to find/list and recover series of RBX files from a file (image/device)


Common blocks header:

  0-  2   3 Recoverable Block signature = 'SBx'
  3-  3   1 Version byte 
  4-  5   2 Block CRC-16
  6- 11	  6 file UID (MD5 or other 32bit hash) 
 12- 15   4 Block sequence number

------------------------

Block sequence = 0

 16- 21   6 unique identifier of parent dir (0 if root)
 22- 29   8 file lenght
 30-284 255 file/dir name (UTF-8)
285-316  32 file content crypto hash (optional)
317-blksize padding
------------------------

Block sequence > 0:

 16-blocksize = data  

